{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emoni\\\\Desktop\\\\diplom ecology\\\\ecology\\\\src\\\\pages\\\\PostIdPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useFetching } from \"../hooks/useFetching\";\nimport PostService from \"../API/PostService\";\nimport Loader from \"../components/UI/Loader/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostIdPage = () => {\n  _s();\n\n  const params = useParams();\n  const [post, setPost] = useState({});\n  const [comments, setComments] = useState([]);\n  const [fetchPostById, isLoading] = useFetching(async id => {\n    const response = await PostService.getById(id);\n    setPost(response.data);\n  });\n  const [fetchComments, isComLoading] = useFetching(async id => {\n    const response = await PostService.getCommentsByPostId(id);\n    setComments(response.data);\n  });\n  useEffect(() => {\n    fetchPostById(params.id);\n    fetchComments(params.id);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Events = \", params.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [post.id, \". \", post.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), isComLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: comments.map(comm => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 15\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: comm.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: comm.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)]\n      }, comm.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostIdPage, \"kHK/8NjW/S7ACv5FHIfXFU25dFw=\", false, function () {\n  return [useParams, useFetching, useFetching];\n});\n\n_c = PostIdPage;\nexport default PostIdPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostIdPage\");","map":{"version":3,"sources":["C:/Users/emoni/Desktop/diplom ecology/ecology/src/pages/PostIdPage.jsx"],"names":["React","useEffect","useState","useParams","useFetching","PostService","Loader","PostIdPage","params","post","setPost","comments","setComments","fetchPostById","isLoading","id","response","getById","data","fetchComments","isComLoading","getCommentsByPostId","title","map","comm","marginTop","email","body"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,aAAD,EAAgBC,SAAhB,IAA6BV,WAAW,CAAC,MAAOW,EAAP,IAAc;AAC3D,UAAMC,QAAQ,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoBF,EAApB,CAAvB;AACAL,IAAAA,OAAO,CAACM,QAAQ,CAACE,IAAV,CAAP;AACD,GAH6C,CAA9C;AAIA,QAAM,CAACC,aAAD,EAAgBC,YAAhB,IAAgChB,WAAW,CAAC,MAAOW,EAAP,IAAc;AAC9D,UAAMC,QAAQ,GAAG,MAAMX,WAAW,CAACgB,mBAAZ,CAAgCN,EAAhC,CAAvB;AACAH,IAAAA,WAAW,CAACI,QAAQ,CAACE,IAAV,CAAX;AACD,GAHgD,CAAjD;AAKAjB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,aAAa,CAACL,MAAM,CAACO,EAAR,CAAb;AACAI,IAAAA,aAAa,CAACX,MAAM,CAACO,EAAR,CAAb;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE;AAAA,4BACE;AAAA,8BAAcP,MAAM,CAACO,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGD,SAAS,gBACR,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADQ,gBAGR;AAAA,iBACGL,IAAI,CAACM,EADR,QACcN,IAAI,CAACa,KADnB;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,EAUGF,YAAY,gBACX,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADW,gBAGX;AAAA,gBACGT,QAAQ,CAACY,GAAT,CAAcC,IAAD,iBACZ;AAAmB,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAA1B;AAAA,gCACE;AAAA,oBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAMF,IAAI,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAUH,IAAI,CAACT,EAAf;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA3CD;;GAAMR,U;UACWJ,S,EAGoBC,W,EAIGA,W;;;KARlCG,U;AA6CN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useFetching } from \"../hooks/useFetching\";\r\nimport PostService from \"../API/PostService\";\r\nimport Loader from \"../components/UI/Loader/Loader\";\r\n\r\nconst PostIdPage = () => {\r\n  const params = useParams();\r\n  const [post, setPost] = useState({});\r\n  const [comments, setComments] = useState([]);\r\n  const [fetchPostById, isLoading] = useFetching(async (id) => {\r\n    const response = await PostService.getById(id);\r\n    setPost(response.data);\r\n  });\r\n  const [fetchComments, isComLoading] = useFetching(async (id) => {\r\n    const response = await PostService.getCommentsByPostId(id);\r\n    setComments(response.data);\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchPostById(params.id);\r\n    fetchComments(params.id);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Events = {params.id}</h1>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div>\r\n          {post.id}. {post.title}\r\n        </div>\r\n      )}\r\n      <h1>comments</h1>\r\n      {isComLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div>\r\n          {comments.map((comm) => (\r\n            <div key={comm.id} style={{ marginTop: 15 }}>\r\n              <h5>{comm.email}</h5>\r\n              <div>{comm.body}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostIdPage;\r\n"]},"metadata":{},"sourceType":"module"}