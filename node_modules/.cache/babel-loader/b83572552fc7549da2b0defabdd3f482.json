{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emoni\\\\Desktop\\\\diplom ecology\\\\ecology\\\\src\\\\pages\\\\PostIdPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useFetching } from \"../hooks/useFetching\";\nimport PostService from \"../API/PostService\";\nimport { YMaps, Map, Placemark } from \"react-yandex-maps\";\nimport Loader from \"../components/UI/Loader/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapData = {\n  center: [55.751574, 37.573856],\n  zoom: 5\n};\nconst coordinates = [[55.684758, 37.738521], [57.684758, 39.738521]];\n\nconst PostIdPage = () => {\n  _s();\n\n  const params = useParams();\n  const [post, setPost] = useState({});\n  const [comments, setComments] = useState([]);\n  const [fetchPostById, isLoading, error] = useFetching(async id => {\n    const response = await PostService.getById(id);\n    setPost(response.data);\n  });\n  const [fetchComments, isComLoading, comError] = useFetching(async id => {\n    const response = await PostService.getCommentsByPostId(id);\n    setComments(response.data);\n  });\n  useEffect(() => {\n    fetchPostById(params.id);\n    fetchComments(params.id);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Events = \", params.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [post.id, \". \", post.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), isComLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: comments.map(comm => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 15\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: comm.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: comm.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(YMaps, {\n            children: /*#__PURE__*/_jsxDEV(Map, {\n              defaultState: mapData,\n              children: coordinates.map(coordinate => /*#__PURE__*/_jsxDEV(Placemark, {\n                geometry: coordinate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)]\n      }, comm.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostIdPage, \"yhVFi/dKHvoi/BwHUNtWcOvaQkM=\", false, function () {\n  return [useParams, useFetching, useFetching];\n});\n\n_c = PostIdPage;\nexport default PostIdPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostIdPage\");","map":{"version":3,"sources":["C:/Users/emoni/Desktop/diplom ecology/ecology/src/pages/PostIdPage.jsx"],"names":["React","useEffect","useState","useParams","useFetching","PostService","YMaps","Map","Placemark","Loader","mapData","center","zoom","coordinates","PostIdPage","params","post","setPost","comments","setComments","fetchPostById","isLoading","error","id","response","getById","data","fetchComments","isComLoading","comError","getCommentsByPostId","title","map","comm","marginTop","email","body","coordinate"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useFetching } from \"../hooks/useFetching\";\r\nimport PostService from \"../API/PostService\";\r\nimport { YMaps, Map, Placemark } from \"react-yandex-maps\";\r\nimport Loader from \"../components/UI/Loader/Loader\";\r\n\r\nconst mapData = {\r\n  center: [55.751574, 37.573856],\r\n  zoom: 5,\r\n};\r\n\r\nconst coordinates = [\r\n  [55.684758, 37.738521],\r\n  [57.684758, 39.738521],\r\n];\r\n\r\nconst PostIdPage = () => {\r\n  const params = useParams();\r\n  const [post, setPost] = useState({});\r\n  const [comments, setComments] = useState([]);\r\n  const [fetchPostById, isLoading, error] = useFetching(async (id) => {\r\n    const response = await PostService.getById(id);\r\n    setPost(response.data);\r\n  });\r\n  const [fetchComments, isComLoading, comError] = useFetching(async (id) => {\r\n    const response = await PostService.getCommentsByPostId(id);\r\n    setComments(response.data);\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchPostById(params.id);\r\n    fetchComments(params.id);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Events = {params.id}</h1>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div>\r\n          {post.id}. {post.title}\r\n        </div>\r\n      )}\r\n      <h1>Comments</h1>\r\n      {isComLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div>\r\n          {comments.map((comm) => (\r\n            <div key={comm.id} style={{ marginTop: 15 }}>\r\n              <h5>{comm.email}</h5>\r\n              <div>{comm.body}</div>\r\n              <div>\r\n\r\n                <YMaps>\r\n                  <Map defaultState={mapData}>\r\n                    {coordinates.map((coordinate) => (\r\n                      <Placemark geometry={coordinate} />\r\n                    ))}\r\n                  </Map>\r\n                </YMaps>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostIdPage;\r\n"]},"metadata":{},"sourceType":"module"}