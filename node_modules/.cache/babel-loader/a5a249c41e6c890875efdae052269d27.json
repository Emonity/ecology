{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emoni\\\\Desktop\\\\ecology\\\\src\\\\components\\\\AppRouter.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { privateRoutes, publicRoutes } from \"../router\";\nimport { AuthContext } from \"../context\";\nimport Loader from \"./UI/Loader/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppRouter = () => {\n  _s();\n\n  const {\n    isAuth,\n    isLoading\n  } = useContext(AuthContext);\n  console.log(isAuth);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this);\n  }\n\n  return isAuth ? /*#__PURE__*/_jsxDEV(Switch, {\n    children: [privateRoutes.map(route => /*#__PURE__*/_jsxDEV(Route, {\n      component: route.component,\n      path: route.path,\n      exact: route.exact\n    }, route.path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }, this)), /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(Switch, {\n    children: [publicRoutes.map(route => /*#__PURE__*/_jsxDEV(Route, {\n      component: route.component,\n      path: route.path,\n      exact: route.exact\n    }, route.path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }, this)), /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 13\n  }, this);\n};\n\n_s(AppRouter, \"p11QuzApV7ohcvywyZxmt3feicw=\");\n\n_c = AppRouter;\nexport default AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"sources":["C:/Users/emoni/Desktop/ecology/src/components/AppRouter.jsx"],"names":["React","useContext","Redirect","Route","Switch","privateRoutes","publicRoutes","AuthContext","Loader","AppRouter","isAuth","isLoading","console","log","map","route","component","path","exact"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,QAAR,EAAkBC,KAAlB,EAAyBC,MAAzB,QAAsC,kBAAtC;AACA,SAAQC,aAAR,EAAuBC,YAAvB,QAA0C,WAA1C;AACA,SAAQC,WAAR,QAA0B,YAA1B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,MAAsBV,UAAU,CAACM,WAAD,CAAtC;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;;AAEA,MAAIC,SAAJ,EAAe;AACX,wBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,SACID,MAAM,gBAEF,QAAC,MAAD;AAAA,eACKL,aAAa,CAACS,GAAd,CAAkBC,KAAK,iBACpB,QAAC,KAAD;AACI,MAAA,SAAS,EAAEA,KAAK,CAACC,SADrB;AAEI,MAAA,IAAI,EAAED,KAAK,CAACE,IAFhB;AAGI,MAAA,KAAK,EAAEF,KAAK,CAACG;AAHjB,OAISH,KAAK,CAACE,IAJf;AAAA;AAAA;AAAA;AAAA,YADH,CADL,eASI,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFE,gBAcF,QAAC,MAAD;AAAA,eACKX,YAAY,CAACQ,GAAb,CAAiBC,KAAK,iBACnB,QAAC,KAAD;AACI,MAAA,SAAS,EAAEA,KAAK,CAACC,SADrB;AAEI,MAAA,IAAI,EAAED,KAAK,CAACE,IAFhB;AAGI,MAAA,KAAK,EAAEF,KAAK,CAACG;AAHjB,OAISH,KAAK,CAACE,IAJf;AAAA;AAAA;AAAA;AAAA,YADH,CADL,eASI,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAfR;AA2BH,CAnCD;;GAAMR,S;;KAAAA,S;AAqCN,eAAeA,SAAf","sourcesContent":["import React, {useContext} from 'react';\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {privateRoutes, publicRoutes} from \"../router\";\r\nimport {AuthContext} from \"../context\";\r\nimport Loader from \"./UI/Loader/Loader\";\r\n\r\nconst AppRouter = () => {\r\n    const {isAuth, isLoading} = useContext(AuthContext);\r\n    console.log(isAuth)\r\n\r\n    if (isLoading) {\r\n        return <Loader/>\r\n    }\r\n\r\n    return (\r\n        isAuth\r\n            ?\r\n            <Switch>\r\n                {privateRoutes.map(route =>\r\n                    <Route\r\n                        component={route.component}\r\n                        path={route.path}\r\n                        exact={route.exact}\r\n                        key={route.path}\r\n                    />\r\n                )}\r\n                <Redirect to='/posts'/>\r\n            </Switch>\r\n            :\r\n            <Switch>\r\n                {publicRoutes.map(route =>\r\n                    <Route\r\n                        component={route.component}\r\n                        path={route.path}\r\n                        exact={route.exact}\r\n                        key={route.path}\r\n                    />\r\n                )}\r\n                <Redirect to='/login'/>\r\n            </Switch>\r\n    );\r\n};\r\n\r\nexport default AppRouter;"]},"metadata":{},"sourceType":"module"}